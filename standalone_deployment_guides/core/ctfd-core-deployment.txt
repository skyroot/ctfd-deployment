System prerequisites:

1. Ubuntu 16.04
2. Internet connection for apt-get and git



Setting up uwsgi and nginx:

1. Install uwsgi and nginx:
        "sudo apt-get install uwsgi uwsgi-plugin-python nginx"

2. Delete the default proxy (optional):
        "sudo rm /etc/nginx/sites-available/default"
        "sudo rm /etc/nginx/sites-enabled/default"

3. Finalize nginx:
        "sudo vim /etc/nginx/nginx.conf"
            and uncomment the line: "server_names_hash_bucket_size 64;"

        "sudo systemctl restart nginx"



Running your first CTFd instance:

1. Create nginx proxy at YOUR_URL1 (e.g. ctfd1.ncl.sg):
        "sudo vim /etc/nginx/sites-available/YOUR_URL1"
            with the content:
                server {
                    listen 80;
                    listen [::]:80;

                    server_name YOUR_URL1;

                    location / { try_files $uri @yourapplication1; }
                    location @yourapplication1 {
                        include uwsgi_params;
                        uwsgi_pass unix:/tmp/uwsgi1.sock;
                    }
                }

        "sudo ln -s /etc/nginx/sites-available/YOUR_URL1 /etc/nginx/sites-enabled/"
        "sudo systemctl restart nginx"

2. Clone CTFd into your desired directory (e.g. ctfd1/):
        "git clone -n https://github.com/CTFd/CTFd.git ctfd1 && cd ctfd1 && git checkout 36dadcf1d50ecfd1d7c0b72be129cef1f93e5c5f"

3. Install CTFd prerequisites:
        "cd ctfd1"
        "sudo ./prepare.sh"

4. Run CTFd:
        "cd ctfd1"
        "uwsgi --plugin python -s /tmp/uwsgi1.sock -w 'CTFd:create_app()' --chmod-socket=666 --pidfile /tmp/ctfd1.pid &"
        "disown"



Running another CTFd instance:

1. Create nginx proxy at YOUR_URL2 (e.g. ctfd2.ncl.sg):
        "sudo vim /etc/nginx/sites-available/YOUR_URL2"
            with the content:
                server {
                    listen 80;
                    listen [::]:80;

                    server_name YOUR_URL2;

                    location / { try_files $uri @yourapplication2; }
                    location @yourapplication2 {
                        include uwsgi_params;
                        uwsgi_pass unix:/tmp/uwsgi2.sock;
                    }
                }

        "sudo ln -s /etc/nginx/sites-available/YOUR_URL2 /etc/nginx/sites-enabled/"
        "sudo systemctl restart nginx"

2. Clone another CTFd folder (e.g. ctfd2/):
        "git clone -n https://github.com/CTFd/CTFd.git ctfd2 && cd ctfd2 && git checkout 36dadcf1d50ecfd1d7c0b72be129cef1f93e5c5f"

3. Run CTFd:
        "cd ctfd2"
        "uwsgi --plugin python -s /tmp/uwsgi2.sock -w 'CTFd:create_app()' --chmod-socket=666 --pidfile /tmp/ctfd2.pid &"
        "disown"



To stop CTFd instances:
    "uwsgi --stop /tmp/ctfd1.pid"
    "uwsgi --stop /tmp/ctfd2.pid"



About SSL certificate options:

1. Using free SSL certificate LetsEncrypt:
        - Do DNS-01 challenge (TXT record in DNS) on a wildcard domain such as *.ctf.ncl.sg
        - Expires every 90 days, should automate renewals
        - Requires the registrant's credentials for ncl.sg domain server_name

2. Using self-signed certificate:
        2a. Using startcmd to install certificates on client nodes
                - OS dependent, requires different scripts for different OSes
        2b. Prompt users to accept the self-signed certificate
                - Users may mistake it as part of the CTF challenge